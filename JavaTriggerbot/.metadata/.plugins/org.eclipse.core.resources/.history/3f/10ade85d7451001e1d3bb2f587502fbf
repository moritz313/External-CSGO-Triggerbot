import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.RoundRectangle2D;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class Menu extends JFrame {
    private JButton button1, button2;
    private JSlider slider1, slider2;

    public Menu() {
        setUndecorated(true);
        setShape(new RoundRectangle2D.Double(0, 0, 400, 300, 30, 30)); // Rounded corners

        JPanel contentPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.setColor(Color.decode("#171d2b"));
                g.fillRect(0, 0, getWidth(), getHeight());
                
            }
        };
        contentPanel.setLayout(new BorderLayout());

        button1 = new JButton("Button 1");
        button2 = new JButton("Button 2");

        slider1 = new JSlider(JSlider.HORIZONTAL, 0, 100, 50);
        slider2 = new JSlider(JSlider.HORIZONTAL, 0, 100, 50);

        slider1.setMajorTickSpacing(20);
        slider1.setMinorTickSpacing(5);
        slider1.setPaintTicks(true);
        slider1.setPaintLabels(true);

        slider2.setMajorTickSpacing(20);
        slider2.setMinorTickSpacing(5);
        slider2.setPaintTicks(true);
        slider2.setPaintLabels(true);

        JPanel buttonPanel = new JPanel();
        buttonPanel.add(button1);
        buttonPanel.add(button2);

        JPanel sliderPanel = new JPanel();
        sliderPanel.setLayout(new GridLayout(2, 1));
        sliderPanel.add(slider1);
        sliderPanel.add(slider2);

        contentPanel.add(buttonPanel, BorderLayout.NORTH);
        contentPanel.add(sliderPanel, BorderLayout.CENTER);

        add(contentPanel);

        button1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Handle button1 click event
            }
        });

        button2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Handle button2 click event
            }
        });

        slider1.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int value = slider1.getValue();
                // Handle slider1 value change event
            }
        });

        slider2.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int value = slider2.getValue();
                // Handle slider2 value change event
            }
        });

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 300);
        setLocationRelativeTo(null);
    }
    
}
